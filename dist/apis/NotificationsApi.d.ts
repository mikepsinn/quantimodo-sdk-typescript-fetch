/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { DeviceToken, NotificationsResponse } from '../models';
export interface GetNotificationsRequest {
    sort?: string;
    limit?: number;
    offset?: number;
    updatedAt?: string;
    userId?: number;
    createdAt?: string;
    id?: number;
    clientId?: string;
    platform?: GetNotificationsPlatformEnum;
}
export interface PostDeviceTokenRequest {
    body: DeviceToken;
}
export interface PostNotificationsRequest {
    sort?: string;
    limit?: number;
    offset?: number;
    updatedAt?: string;
    userId?: number;
    createdAt?: string;
    id?: number;
    clientId?: string;
    platform?: PostNotificationsPlatformEnum;
}
/**
 *
 */
export declare class NotificationsApi extends runtime.BaseAPI {
    /**
     * Get NotificationPreferences
     * Get NotificationPreferences
     */
    getNotificationPreferencesRaw(): Promise<runtime.ApiResponse<void>>;
    /**
     * Get NotificationPreferences
     * Get NotificationPreferences
     */
    getNotificationPreferences(): Promise<void>;
    /**
     * Get Notifications
     * Get Notifications
     */
    getNotificationsRaw(requestParameters: GetNotificationsRequest): Promise<runtime.ApiResponse<Array<NotificationsResponse>>>;
    /**
     * Get Notifications
     * Get Notifications
     */
    getNotifications(requestParameters: GetNotificationsRequest): Promise<Array<NotificationsResponse>>;
    /**
     * Post user token for Android, iOS, or web push notifications
     * Post DeviceTokens
     */
    postDeviceTokenRaw(requestParameters: PostDeviceTokenRequest): Promise<runtime.ApiResponse<void>>;
    /**
     * Post user token for Android, iOS, or web push notifications
     * Post DeviceTokens
     */
    postDeviceToken(requestParameters: PostDeviceTokenRequest): Promise<void>;
    /**
     * Post Notifications
     * Post Notifications
     */
    postNotificationsRaw(requestParameters: PostNotificationsRequest): Promise<runtime.ApiResponse<Array<NotificationsResponse>>>;
    /**
     * Post Notifications
     * Post Notifications
     */
    postNotifications(requestParameters: PostNotificationsRequest): Promise<Array<NotificationsResponse>>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetNotificationsPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostNotificationsPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
