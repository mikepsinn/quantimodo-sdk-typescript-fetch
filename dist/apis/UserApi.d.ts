/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import * as runtime from '../runtime';
import { CommonResponse, PostUserSettingsResponse, User, UserBlogsResponse, UsersResponse } from '../models';
export interface DeleteUserRequest {
    reason: string;
    clientId?: string;
    platform?: DeleteUserPlatformEnum;
}
export interface GetUserRequest {
    userId?: number;
    createdAt?: string;
    updatedAt?: string;
    limit?: number;
    offset?: number;
    sort?: string;
    clientId?: string;
    appVersion?: string;
    clientUserId?: number;
    platform?: GetUserPlatformEnum;
    log?: string;
    pwd?: string;
    includeAuthorizedClients?: boolean;
}
export interface GetUserBlogsRequest {
    sort?: string;
    limit?: number;
    offset?: number;
    updatedAt?: string;
    userId?: number;
    createdAt?: string;
    id?: number;
    clientId?: string;
    platform?: GetUserBlogsPlatformEnum;
}
export interface GetUsersRequest {
    userId?: number;
    createdAt?: string;
    updatedAt?: string;
    limit?: number;
    offset?: number;
    sort?: string;
    clientId?: string;
    appVersion?: string;
    clientUserId?: number;
    platform?: GetUsersPlatformEnum;
    log?: string;
    pwd?: string;
}
export interface PostUserBlogsRequest {
    sort?: string;
    limit?: number;
    offset?: number;
    updatedAt?: string;
    userId?: number;
    createdAt?: string;
    id?: number;
    clientId?: string;
    platform?: PostUserBlogsPlatformEnum;
}
export interface PostUserSettingsRequest {
    body: User;
    clientId?: string;
    platform?: PostUserSettingsPlatformEnum;
}
/**
 *
 */
export declare class UserApi extends runtime.BaseAPI {
    /**
     * Delete user account. Only the client app that created a user can delete that user.
     * Delete user
     */
    deleteUserRaw(requestParameters: DeleteUserRequest): Promise<runtime.ApiResponse<CommonResponse>>;
    /**
     * Delete user account. Only the client app that created a user can delete that user.
     * Delete user
     */
    deleteUser(requestParameters: DeleteUserRequest): Promise<CommonResponse>;
    /**
     * Returns user info.  If no userId is specified, returns info for currently authenticated user
     * Get user info
     */
    getUserRaw(requestParameters: GetUserRequest): Promise<runtime.ApiResponse<User>>;
    /**
     * Returns user info.  If no userId is specified, returns info for currently authenticated user
     * Get user info
     */
    getUser(requestParameters: GetUserRequest): Promise<User>;
    /**
     * Get UserBlogs
     * Get UserBlogs
     */
    getUserBlogsRaw(requestParameters: GetUserBlogsRequest): Promise<runtime.ApiResponse<Array<UserBlogsResponse>>>;
    /**
     * Get UserBlogs
     * Get UserBlogs
     */
    getUserBlogs(requestParameters: GetUserBlogsRequest): Promise<Array<UserBlogsResponse>>;
    /**
     * Returns users who have granted access to their data
     * Get users who shared data
     */
    getUsersRaw(requestParameters: GetUsersRequest): Promise<runtime.ApiResponse<UsersResponse>>;
    /**
     * Returns users who have granted access to their data
     * Get users who shared data
     */
    getUsers(requestParameters: GetUsersRequest): Promise<UsersResponse>;
    /**
     * Post UserBlogs
     * Post UserBlogs
     */
    postUserBlogsRaw(requestParameters: PostUserBlogsRequest): Promise<runtime.ApiResponse<Array<UserBlogsResponse>>>;
    /**
     * Post UserBlogs
     * Post UserBlogs
     */
    postUserBlogs(requestParameters: PostUserBlogsRequest): Promise<Array<UserBlogsResponse>>;
    /**
     * Post UserSettings
     * Post UserSettings
     */
    postUserSettingsRaw(requestParameters: PostUserSettingsRequest): Promise<runtime.ApiResponse<PostUserSettingsResponse>>;
    /**
     * Post UserSettings
     * Post UserSettings
     */
    postUserSettings(requestParameters: PostUserSettingsRequest): Promise<PostUserSettingsResponse>;
}
/**
    * @export
    * @enum {string}
    */
export declare enum DeleteUserPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetUserPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetUserBlogsPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum GetUsersPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostUserBlogsPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
/**
    * @export
    * @enum {string}
    */
export declare enum PostUserSettingsPlatformEnum {
    Chrome = "chrome",
    Android = "android",
    Ios = "ios",
    Web = "web"
}
