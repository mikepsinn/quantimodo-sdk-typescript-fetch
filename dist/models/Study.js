"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function StudyFromJSON(json) {
    return StudyFromJSONTyped(json, false);
}
exports.StudyFromJSON = StudyFromJSON;
function StudyFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'type': json['type'],
        'userId': !runtime_1.exists(json, 'userId') ? undefined : json['userId'],
        'id': !runtime_1.exists(json, 'id') ? undefined : json['id'],
        'causeVariable': !runtime_1.exists(json, 'causeVariable') ? undefined : _1.VariableFromJSON(json['causeVariable']),
        'causeVariableName': !runtime_1.exists(json, 'causeVariableName') ? undefined : json['causeVariableName'],
        'studyCharts': !runtime_1.exists(json, 'studyCharts') ? undefined : _1.StudyChartsFromJSON(json['studyCharts']),
        'effectVariable': !runtime_1.exists(json, 'effectVariable') ? undefined : _1.VariableFromJSON(json['effectVariable']),
        'effectVariableName': !runtime_1.exists(json, 'effectVariableName') ? undefined : json['effectVariableName'],
        'participantInstructions': !runtime_1.exists(json, 'participantInstructions') ? undefined : _1.ParticipantInstructionFromJSON(json['participantInstructions']),
        'statistics': !runtime_1.exists(json, 'statistics') ? undefined : _1.CorrelationFromJSON(json['statistics']),
        'studyCard': !runtime_1.exists(json, 'studyCard') ? undefined : _1.CardFromJSON(json['studyCard']),
        'studyHtml': !runtime_1.exists(json, 'studyHtml') ? undefined : _1.StudyHtmlFromJSON(json['studyHtml']),
        'studyImages': !runtime_1.exists(json, 'studyImages') ? undefined : _1.StudyImagesFromJSON(json['studyImages']),
        'studyLinks': !runtime_1.exists(json, 'studyLinks') ? undefined : _1.StudyLinksFromJSON(json['studyLinks']),
        'studySharing': !runtime_1.exists(json, 'studySharing') ? undefined : _1.StudySharingFromJSON(json['studySharing']),
        'studyText': !runtime_1.exists(json, 'studyText') ? undefined : _1.StudyTextFromJSON(json['studyText']),
        'studyVotes': !runtime_1.exists(json, 'studyVotes') ? undefined : _1.StudyVotesFromJSON(json['studyVotes']),
        'joined': !runtime_1.exists(json, 'joined') ? undefined : json['joined'],
    };
}
exports.StudyFromJSONTyped = StudyFromJSONTyped;
function StudyToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'type': value.type,
        'userId': value.userId,
        'id': value.id,
        'causeVariable': _1.VariableToJSON(value.causeVariable),
        'causeVariableName': value.causeVariableName,
        'studyCharts': _1.StudyChartsToJSON(value.studyCharts),
        'effectVariable': _1.VariableToJSON(value.effectVariable),
        'effectVariableName': value.effectVariableName,
        'participantInstructions': _1.ParticipantInstructionToJSON(value.participantInstructions),
        'statistics': _1.CorrelationToJSON(value.statistics),
        'studyCard': _1.CardToJSON(value.studyCard),
        'studyHtml': _1.StudyHtmlToJSON(value.studyHtml),
        'studyImages': _1.StudyImagesToJSON(value.studyImages),
        'studyLinks': _1.StudyLinksToJSON(value.studyLinks),
        'studySharing': _1.StudySharingToJSON(value.studySharing),
        'studyText': _1.StudyTextToJSON(value.studyText),
        'studyVotes': _1.StudyVotesToJSON(value.studyVotes),
        'joined': value.joined,
    };
}
exports.StudyToJSON = StudyToJSON;
