"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
function ActivityFromJSON(json) {
    return ActivityFromJSONTyped(json, false);
}
exports.ActivityFromJSON = ActivityFromJSON;
function ActivityFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'id': json['id'],
        'userId': json['userId'],
        'component': json['component'],
        'type': json['type'],
        'action': json['action'],
        'content': json['content'],
        'primaryLink': json['primaryLink'],
        'itemId': json['itemId'],
        'secondaryItemId': json['secondaryItemId'],
        'dateRecorded': json['dateRecorded'],
        'hideSitewide': json['hideSitewide'],
        'mpttLeft': json['mpttLeft'],
        'mpttRight': json['mpttRight'],
        'isSpam': json['isSpam'],
        'metaDataArray': !runtime_1.exists(json, 'metaDataArray') ? undefined : json['metaDataArray'],
    };
}
exports.ActivityFromJSONTyped = ActivityFromJSONTyped;
function ActivityToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'id': value.id,
        'userId': value.userId,
        'component': value.component,
        'type': value.type,
        'action': value.action,
        'content': value.content,
        'primaryLink': value.primaryLink,
        'itemId': value.itemId,
        'secondaryItemId': value.secondaryItemId,
        'dateRecorded': value.dateRecorded,
        'hideSitewide': value.hideSitewide,
        'mpttLeft': value.mpttLeft,
        'mpttRight': value.mpttRight,
        'isSpam': value.isSpam,
        'metaDataArray': value.metaDataArray,
    };
}
exports.ActivityToJSON = ActivityToJSON;
