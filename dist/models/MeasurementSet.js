"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function MeasurementSetFromJSON(json) {
    return MeasurementSetFromJSONTyped(json, false);
}
exports.MeasurementSetFromJSON = MeasurementSetFromJSON;
function MeasurementSetFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'combinationOperation': !runtime_1.exists(json, 'combinationOperation') ? undefined : json['combinationOperation'],
        'measurementItems': (json['measurementItems'].map(_1.MeasurementItemFromJSON)),
        'sourceName': json['sourceName'],
        'unitAbbreviatedName': json['unitAbbreviatedName'],
        'variableCategoryName': !runtime_1.exists(json, 'variableCategoryName') ? undefined : json['variableCategoryName'],
        'variableName': json['variableName'],
        'upc': !runtime_1.exists(json, 'upc') ? undefined : json['upc'],
    };
}
exports.MeasurementSetFromJSONTyped = MeasurementSetFromJSONTyped;
function MeasurementSetToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'combinationOperation': value.combinationOperation,
        'measurementItems': (value.measurementItems.map(_1.MeasurementItemToJSON)),
        'sourceName': value.sourceName,
        'unitAbbreviatedName': value.unitAbbreviatedName,
        'variableCategoryName': value.variableCategoryName,
        'variableName': value.variableName,
        'upc': value.upc,
    };
}
exports.MeasurementSetToJSON = MeasurementSetToJSON;
/**
* @export
* @enum {string}
*/
var MeasurementSetCombinationOperationEnum;
(function (MeasurementSetCombinationOperationEnum) {
    MeasurementSetCombinationOperationEnum["MEAN"] = "MEAN";
    MeasurementSetCombinationOperationEnum["SUM"] = "SUM";
})(MeasurementSetCombinationOperationEnum = exports.MeasurementSetCombinationOperationEnum || (exports.MeasurementSetCombinationOperationEnum = {}));
/**
* @export
* @enum {string}
*/
var MeasurementSetVariableCategoryNameEnum;
(function (MeasurementSetVariableCategoryNameEnum) {
    MeasurementSetVariableCategoryNameEnum["Activity"] = "Activity";
    MeasurementSetVariableCategoryNameEnum["Books"] = "Books";
    MeasurementSetVariableCategoryNameEnum["CausesOfIllness"] = "Causes of Illness";
    MeasurementSetVariableCategoryNameEnum["CognitivePerformance"] = "Cognitive Performance";
    MeasurementSetVariableCategoryNameEnum["Conditions"] = "Conditions";
    MeasurementSetVariableCategoryNameEnum["Emotions"] = "Emotions";
    MeasurementSetVariableCategoryNameEnum["Environment"] = "Environment";
    MeasurementSetVariableCategoryNameEnum["Foods"] = "Foods";
    MeasurementSetVariableCategoryNameEnum["Goals"] = "Goals";
    MeasurementSetVariableCategoryNameEnum["Locations"] = "Locations";
    MeasurementSetVariableCategoryNameEnum["Miscellaneous"] = "Miscellaneous";
    MeasurementSetVariableCategoryNameEnum["MoviesAndTV"] = "Movies and TV";
    MeasurementSetVariableCategoryNameEnum["Music"] = "Music";
    MeasurementSetVariableCategoryNameEnum["Nutrients"] = "Nutrients";
    MeasurementSetVariableCategoryNameEnum["Payments"] = "Payments";
    MeasurementSetVariableCategoryNameEnum["PhysicalActivities"] = "Physical Activities";
    MeasurementSetVariableCategoryNameEnum["Physique"] = "Physique";
    MeasurementSetVariableCategoryNameEnum["Sleep"] = "Sleep";
    MeasurementSetVariableCategoryNameEnum["SocialInteractions"] = "Social Interactions";
    MeasurementSetVariableCategoryNameEnum["Software"] = "Software";
    MeasurementSetVariableCategoryNameEnum["Symptoms"] = "Symptoms";
    MeasurementSetVariableCategoryNameEnum["Treatments"] = "Treatments";
    MeasurementSetVariableCategoryNameEnum["VitalSigns"] = "Vital Signs";
})(MeasurementSetVariableCategoryNameEnum = exports.MeasurementSetVariableCategoryNameEnum || (exports.MeasurementSetVariableCategoryNameEnum = {}));
