/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Card, TrackingReminderNotificationAction, TrackingReminderNotificationTrackAllAction, Unit } from './';
/**
 *
 * @export
 * @interface TrackingReminderNotification
 */
export interface TrackingReminderNotification {
    /**
     *
     * @type {Array<TrackingReminderNotificationAction>}
     * @memberof TrackingReminderNotification
     */
    actionArray: Array<TrackingReminderNotificationAction>;
    /**
     *
     * @type {Array<Unit>}
     * @memberof TrackingReminderNotification
     */
    availableUnits: Array<Unit>;
    /**
     * Link to study comparing variable with strongest relationship for user or population
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    bestStudyLink?: string;
    /**
     *
     * @type {Card}
     * @memberof TrackingReminderNotification
     */
    bestStudyCard?: Card;
    /**
     * Link to study comparing variable with strongest relationship for user
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    bestUserStudyLink?: string;
    /**
     *
     * @type {Card}
     * @memberof TrackingReminderNotification
     */
    bestUserStudyCard?: Card;
    /**
     * Link to study comparing variable with strongest relationship for population
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    bestPopulationStudyLink?: string;
    /**
     *
     * @type {Card}
     * @memberof TrackingReminderNotification
     */
    bestPopulationStudyCard?: Card;
    /**
     * Description of relationship with variable with strongest relationship for user or population
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    optimalValueMessage?: string;
    /**
     * Description of relationship with variable with strongest relationship for population
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    commonOptimalValueMessage?: string;
    /**
     * Description of relationship with variable with strongest relationship for user
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    userOptimalValueMessage?: string;
    /**
     *
     * @type {Card}
     * @memberof TrackingReminderNotification
     */
    card?: Card;
    /**
     * Your QuantiModo client id can be obtained by creating an app at https://builder.quantimo.do
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    clientId?: string;
    /**
     * The way multiple measurements are aggregated over time
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    combinationOperation?: TrackingReminderNotificationCombinationOperationEnum;
    /**
     * Ex: 2017-07-29 20:49:54 UTC ISO 8601 YYYY-MM-DDThh:mm:ss
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    createdAt?: string;
    /**
     * Ex: Trader Joe's Bedtime Tea
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    displayName?: string;
    /**
     * Is the user specified default value or falls back to the last value in user unit. Good for initializing input fields. Unit: User-specified or common.
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    modifiedValue?: number;
    /**
     * Ex: /5
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    unitAbbreviatedName?: string;
    /**
     * Ex: 5
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    unitCategoryId?: number;
    /**
     * Ex: Rating
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    unitCategoryName?: string;
    /**
     * Ex: 10
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    unitId?: number;
    /**
     * Ex: 1 to 5 Rating
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    unitName?: string;
    /**
     * Default value to use for the measurement when tracking
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    defaultValue?: number;
    /**
     * Valence indicates what type of buttons should be used when recording measurements for this variable. positive - Face buttons with the happiest face equating to a 5/5 rating where higher is better like Overall Mood. negative - Face buttons with happiest face equating to a 1/5 rating where lower is better like Headache Severity. numeric - Just 1 to 5 numeric buttons for neutral variables.
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    description?: string;
    /**
     * True if the reminders should be delivered via email
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    email?: boolean;
    /**
     * Ex: 0
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    fillingValue: number;
    /**
     * Ex: ion-sad-outline
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    iconIcon?: string;
    /**
     * id for the specific PENDING tracking remidner
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    id: number;
    /**
     * Ex: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    imageUrl?: string;
    /**
     * Ex: happiestFaceIsFive
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    inputType?: string;
    /**
     * Ex: ion-happy-outline
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    ionIcon?: string;
    /**
     * Ex: 3
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    lastValue?: number;
    /**
     * True if this variable is normally tracked via manual user input rather than automatic imports
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    manualTracking?: boolean;
    /**
     * Ex: 5
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    maximumAllowedValue?: number;
    /**
     * Ex: 1
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    minimumAllowedValue?: number;
    /**
     * Ex: 3
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    mostCommonValue?: number;
    /**
     * True if the reminders should appear in the notification bar
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    notificationBar?: boolean;
    /**
     * Ex: UTC ISO 8601 YYYY-MM-DDThh:mm:ss
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    notifiedAt?: string;
    /**
     * Ex: 5
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    numberOfUniqueValues?: number;
    /**
     * Indicates whether or not the variable is usually an outcome of interest such as a symptom or emotion
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    outcome?: boolean;
    /**
     * Ex: img/variable_categories/emotions.png
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    pngPath?: string;
    /**
     * Ex: https://web.quantimo.do/img/variable_categories/emotions.png
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    pngUrl?: string;
    /**
     * True if the reminders should appear as a popup notification
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    popUp?: boolean;
    /**
     * Link to associated product for purchase
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    productUrl?: string;
    /**
     * Ex: How is your overall mood?
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    question?: string;
    /**
     * Ex: How is your overall mood on a scale of 1 to 5??
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    longQuestion?: string;
    /**
     * Ex: 01-01-2018
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    reminderEndTime?: string;
    /**
     * How often user should be reminded in seconds. Ex: 86400
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    reminderFrequency?: number;
    /**
     * String identifier for the sound to accompany the reminder
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    reminderSound?: string;
    /**
     * Earliest time of day at which reminders should appear in UTC HH:MM:SS format
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    reminderStartTime?: string;
    /**
     * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    reminderTime?: string;
    /**
     * Ex: 4
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    secondMostCommonValue?: number;
    /**
     * Ex: 1
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    secondToLastValue?: number;
    /**
     * True if the reminders should be delivered via SMS
     * @type {boolean}
     * @memberof TrackingReminderNotification
     */
    sms?: boolean;
    /**
     * Ex: https://web.quantimo.do/img/variable_categories/emotions.svg
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    svgUrl?: string;
    /**
     * Ex: 2
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    thirdMostCommonValue?: number;
    /**
     * Ex: 2
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    thirdToLastValue?: number;
    /**
     * Ex: Rate Overall Mood
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    title?: string;
    /**
     * Ex: 3
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    total?: number;
    /**
     *
     * @type {Array<TrackingReminderNotificationTrackAllAction>}
     * @memberof TrackingReminderNotification
     */
    trackAllActions: Array<TrackingReminderNotificationTrackAllAction>;
    /**
     * id for the repeating tracking remidner
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    trackingReminderId?: number;
    /**
     * Ex: https://rximage.nlm.nih.gov/image/images/gallery/original/55111-0129-60_RXNAVIMAGE10_B051D81E.jpg
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    trackingReminderImageUrl?: string;
    /**
     * Ex: 5072482
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    trackingReminderNotificationId?: number;
    /**
     * UTC ISO 8601 YYYY-MM-DDThh:mm:ss timestamp for the specific time the variable should be tracked in UTC.  This will be used for the measurement startTime if the track endpoint is used.
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    trackingReminderNotificationTime?: string;
    /**
     * Ex: 1501534124
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    trackingReminderNotificationTimeEpoch?: number;
    /**
     * Ex: 15:48:44
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    trackingReminderNotificationTimeLocal?: string;
    /**
     * Ex: 8PM Sun, May 1
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    trackingReminderNotificationTimeLocalHumanString?: string;
    /**
     * When the record in the database was last updated. Use UTC ISO 8601 YYYY-MM-DDThh:mm:ss  datetime format. Time zone should be UTC and not local.
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    updatedAt?: string;
    /**
     * ID of User
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    userId?: number;
    /**
     * Ex: /5
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    userVariableUnitAbbreviatedName?: string;
    /**
     * Ex: 5
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    userVariableUnitCategoryId?: number;
    /**
     * Ex: Rating
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    userVariableUnitCategoryName?: string;
    /**
     * Ex: 10
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    userVariableUnitId?: number;
    /**
     * Ex: 1 to 5 Rating
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    userVariableUnitName?: string;
    /**
     * Ex: 1
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    userVariableVariableCategoryId?: number;
    /**
     * Ex: Emotions
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    userVariableVariableCategoryName?: string;
    /**
     * Valence indicates what type of buttons should be used when recording measurements for this variable. positive - Face buttons with the happiest face equating to a 5/5 rating where higher is better like Overall Mood. negative - Face buttons with happiest face equating to a 1/5 rating where lower is better like Headache Severity. numeric - Just 1 to 5 numeric buttons for neutral variables.
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    valence?: string;
    /**
     * Ex: 1
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    variableCategoryId?: number;
    /**
     * Ex: https://static.quantimo.do/img/variable_categories/theatre_mask-96.png
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    variableCategoryImageUrl?: string;
    /**
     * Ex: Emotions, Treatments, Symptoms...
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    variableCategoryName?: TrackingReminderNotificationVariableCategoryNameEnum;
    /**
     * Id for the variable to be tracked
     * @type {number}
     * @memberof TrackingReminderNotification
     */
    variableId?: number;
    /**
     * Ex: https://image.png
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    variableImageUrl?: string;
    /**
     * Name of the variable to be used when sending measurements
     * @type {string}
     * @memberof TrackingReminderNotification
     */
    variableName?: string;
}
export declare function TrackingReminderNotificationFromJSON(json: any): TrackingReminderNotification;
export declare function TrackingReminderNotificationFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackingReminderNotification;
export declare function TrackingReminderNotificationToJSON(value?: TrackingReminderNotification | null): any;
/**
* @export
* @enum {string}
*/
export declare enum TrackingReminderNotificationCombinationOperationEnum {
    MEAN = "MEAN",
    SUM = "SUM"
}
/**
* @export
* @enum {string}
*/
export declare enum TrackingReminderNotificationVariableCategoryNameEnum {
    Activity = "Activity",
    Books = "Books",
    CausesOfIllness = "Causes of Illness",
    CognitivePerformance = "Cognitive Performance",
    Conditions = "Conditions",
    Emotions = "Emotions",
    Environment = "Environment",
    Foods = "Foods",
    Goals = "Goals",
    Locations = "Locations",
    Miscellaneous = "Miscellaneous",
    MoviesAndTV = "Movies and TV",
    Music = "Music",
    Nutrients = "Nutrients",
    Payments = "Payments",
    PhysicalActivities = "Physical Activities",
    Physique = "Physique",
    Sleep = "Sleep",
    SocialInteractions = "Social Interactions",
    Software = "Software",
    Symptoms = "Symptoms",
    Treatments = "Treatments",
    VitalSigns = "Vital Signs"
}
