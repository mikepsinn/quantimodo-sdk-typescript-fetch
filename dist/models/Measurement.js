"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
const _1 = require("./");
function MeasurementFromJSON(json) {
    return MeasurementFromJSONTyped(json, false);
}
exports.MeasurementFromJSON = MeasurementFromJSON;
function MeasurementFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'card': !runtime_1.exists(json, 'card') ? undefined : _1.CardFromJSON(json['card']),
        'clientId': !runtime_1.exists(json, 'clientId') ? undefined : json['clientId'],
        'connectorId': !runtime_1.exists(json, 'connectorId') ? undefined : json['connectorId'],
        'createdAt': !runtime_1.exists(json, 'createdAt') ? undefined : json['createdAt'],
        'displayValueAndUnitString': !runtime_1.exists(json, 'displayValueAndUnitString') ? undefined : json['displayValueAndUnitString'],
        'iconIcon': !runtime_1.exists(json, 'iconIcon') ? undefined : json['iconIcon'],
        'id': !runtime_1.exists(json, 'id') ? undefined : json['id'],
        'inputType': !runtime_1.exists(json, 'inputType') ? undefined : json['inputType'],
        'ionIcon': !runtime_1.exists(json, 'ionIcon') ? undefined : json['ionIcon'],
        'manualTracking': !runtime_1.exists(json, 'manualTracking') ? undefined : json['manualTracking'],
        'maximumAllowedValue': !runtime_1.exists(json, 'maximumAllowedValue') ? undefined : json['maximumAllowedValue'],
        'minimumAllowedValue': !runtime_1.exists(json, 'minimumAllowedValue') ? undefined : json['minimumAllowedValue'],
        'note': !runtime_1.exists(json, 'note') ? undefined : json['note'],
        'noteObject': !runtime_1.exists(json, 'noteObject') ? undefined : json['noteObject'],
        'noteHtml': !runtime_1.exists(json, 'noteHtml') ? undefined : json['noteHtml'],
        'originalUnitId': !runtime_1.exists(json, 'originalUnitId') ? undefined : json['originalUnitId'],
        'originalValue': !runtime_1.exists(json, 'originalValue') ? undefined : json['originalValue'],
        'pngPath': !runtime_1.exists(json, 'pngPath') ? undefined : json['pngPath'],
        'pngUrl': !runtime_1.exists(json, 'pngUrl') ? undefined : json['pngUrl'],
        'productUrl': !runtime_1.exists(json, 'productUrl') ? undefined : json['productUrl'],
        'sourceName': json['sourceName'],
        'startDate': !runtime_1.exists(json, 'startDate') ? undefined : json['startDate'],
        'startTimeEpoch': !runtime_1.exists(json, 'startTimeEpoch') ? undefined : json['startTimeEpoch'],
        'startTimeString': json['startTimeString'],
        'svgUrl': !runtime_1.exists(json, 'svgUrl') ? undefined : json['svgUrl'],
        'unitAbbreviatedName': json['unitAbbreviatedName'],
        'unitCategoryId': !runtime_1.exists(json, 'unitCategoryId') ? undefined : json['unitCategoryId'],
        'unitCategoryName': !runtime_1.exists(json, 'unitCategoryName') ? undefined : json['unitCategoryName'],
        'unitId': !runtime_1.exists(json, 'unitId') ? undefined : json['unitId'],
        'unitName': !runtime_1.exists(json, 'unitName') ? undefined : json['unitName'],
        'updatedAt': !runtime_1.exists(json, 'updatedAt') ? undefined : json['updatedAt'],
        'url': !runtime_1.exists(json, 'url') ? undefined : json['url'],
        'userVariableUnitAbbreviatedName': !runtime_1.exists(json, 'userVariableUnitAbbreviatedName') ? undefined : json['userVariableUnitAbbreviatedName'],
        'userVariableUnitCategoryId': !runtime_1.exists(json, 'userVariableUnitCategoryId') ? undefined : json['userVariableUnitCategoryId'],
        'userVariableUnitCategoryName': !runtime_1.exists(json, 'userVariableUnitCategoryName') ? undefined : json['userVariableUnitCategoryName'],
        'userVariableUnitId': !runtime_1.exists(json, 'userVariableUnitId') ? undefined : json['userVariableUnitId'],
        'userVariableUnitName': !runtime_1.exists(json, 'userVariableUnitName') ? undefined : json['userVariableUnitName'],
        'userVariableVariableCategoryId': !runtime_1.exists(json, 'userVariableVariableCategoryId') ? undefined : json['userVariableVariableCategoryId'],
        'userVariableVariableCategoryName': !runtime_1.exists(json, 'userVariableVariableCategoryName') ? undefined : json['userVariableVariableCategoryName'],
        'valence': !runtime_1.exists(json, 'valence') ? undefined : json['valence'],
        'value': json['value'],
        'variableCategoryId': !runtime_1.exists(json, 'variableCategoryId') ? undefined : json['variableCategoryId'],
        'variableCategoryImageUrl': !runtime_1.exists(json, 'variableCategoryImageUrl') ? undefined : json['variableCategoryImageUrl'],
        'variableCategoryName': !runtime_1.exists(json, 'variableCategoryName') ? undefined : json['variableCategoryName'],
        'variableDescription': !runtime_1.exists(json, 'variableDescription') ? undefined : json['variableDescription'],
        'variableId': !runtime_1.exists(json, 'variableId') ? undefined : json['variableId'],
        'variableName': json['variableName'],
        'displayName': !runtime_1.exists(json, 'displayName') ? undefined : json['displayName'],
    };
}
exports.MeasurementFromJSONTyped = MeasurementFromJSONTyped;
function MeasurementToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'card': _1.CardToJSON(value.card),
        'clientId': value.clientId,
        'connectorId': value.connectorId,
        'createdAt': value.createdAt,
        'displayValueAndUnitString': value.displayValueAndUnitString,
        'iconIcon': value.iconIcon,
        'id': value.id,
        'inputType': value.inputType,
        'ionIcon': value.ionIcon,
        'manualTracking': value.manualTracking,
        'maximumAllowedValue': value.maximumAllowedValue,
        'minimumAllowedValue': value.minimumAllowedValue,
        'note': value.note,
        'noteObject': value.noteObject,
        'noteHtml': value.noteHtml,
        'originalUnitId': value.originalUnitId,
        'originalValue': value.originalValue,
        'pngPath': value.pngPath,
        'pngUrl': value.pngUrl,
        'productUrl': value.productUrl,
        'sourceName': value.sourceName,
        'startDate': value.startDate,
        'startTimeEpoch': value.startTimeEpoch,
        'startTimeString': value.startTimeString,
        'svgUrl': value.svgUrl,
        'unitAbbreviatedName': value.unitAbbreviatedName,
        'unitCategoryId': value.unitCategoryId,
        'unitCategoryName': value.unitCategoryName,
        'unitId': value.unitId,
        'unitName': value.unitName,
        'updatedAt': value.updatedAt,
        'url': value.url,
        'userVariableUnitAbbreviatedName': value.userVariableUnitAbbreviatedName,
        'userVariableUnitCategoryId': value.userVariableUnitCategoryId,
        'userVariableUnitCategoryName': value.userVariableUnitCategoryName,
        'userVariableUnitId': value.userVariableUnitId,
        'userVariableUnitName': value.userVariableUnitName,
        'userVariableVariableCategoryId': value.userVariableVariableCategoryId,
        'userVariableVariableCategoryName': value.userVariableVariableCategoryName,
        'valence': value.valence,
        'value': value.value,
        'variableCategoryId': value.variableCategoryId,
        'variableCategoryImageUrl': value.variableCategoryImageUrl,
        'variableCategoryName': value.variableCategoryName,
        'variableDescription': value.variableDescription,
        'variableId': value.variableId,
        'variableName': value.variableName,
        'displayName': value.displayName,
    };
}
exports.MeasurementToJSON = MeasurementToJSON;
/**
* @export
* @enum {string}
*/
var MeasurementVariableCategoryNameEnum;
(function (MeasurementVariableCategoryNameEnum) {
    MeasurementVariableCategoryNameEnum["Activity"] = "Activity";
    MeasurementVariableCategoryNameEnum["Books"] = "Books";
    MeasurementVariableCategoryNameEnum["CausesOfIllness"] = "Causes of Illness";
    MeasurementVariableCategoryNameEnum["CognitivePerformance"] = "Cognitive Performance";
    MeasurementVariableCategoryNameEnum["Conditions"] = "Conditions";
    MeasurementVariableCategoryNameEnum["Emotions"] = "Emotions";
    MeasurementVariableCategoryNameEnum["Environment"] = "Environment";
    MeasurementVariableCategoryNameEnum["Foods"] = "Foods";
    MeasurementVariableCategoryNameEnum["Goals"] = "Goals";
    MeasurementVariableCategoryNameEnum["Locations"] = "Locations";
    MeasurementVariableCategoryNameEnum["Miscellaneous"] = "Miscellaneous";
    MeasurementVariableCategoryNameEnum["MoviesAndTV"] = "Movies and TV";
    MeasurementVariableCategoryNameEnum["Music"] = "Music";
    MeasurementVariableCategoryNameEnum["Nutrients"] = "Nutrients";
    MeasurementVariableCategoryNameEnum["Payments"] = "Payments";
    MeasurementVariableCategoryNameEnum["PhysicalActivities"] = "Physical Activities";
    MeasurementVariableCategoryNameEnum["Physique"] = "Physique";
    MeasurementVariableCategoryNameEnum["Sleep"] = "Sleep";
    MeasurementVariableCategoryNameEnum["SocialInteractions"] = "Social Interactions";
    MeasurementVariableCategoryNameEnum["Software"] = "Software";
    MeasurementVariableCategoryNameEnum["Symptoms"] = "Symptoms";
    MeasurementVariableCategoryNameEnum["Treatments"] = "Treatments";
    MeasurementVariableCategoryNameEnum["VitalSigns"] = "Vital Signs";
})(MeasurementVariableCategoryNameEnum = exports.MeasurementVariableCategoryNameEnum || (exports.MeasurementVariableCategoryNameEnum = {}));
