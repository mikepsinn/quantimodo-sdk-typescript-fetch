"use strict";
/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const runtime_1 = require("../runtime");
function StudyImagesFromJSON(json) {
    return StudyImagesFromJSONTyped(json, false);
}
exports.StudyImagesFromJSON = StudyImagesFromJSON;
function StudyImagesFromJSONTyped(json, ignoreDiscriminator) {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        'causeVariableImageUrl': !runtime_1.exists(json, 'causeVariableImageUrl') ? undefined : json['causeVariableImageUrl'],
        'causeVariableIonIcon': !runtime_1.exists(json, 'causeVariableIonIcon') ? undefined : json['causeVariableIonIcon'],
        'effectVariableImageUrl': !runtime_1.exists(json, 'effectVariableImageUrl') ? undefined : json['effectVariableImageUrl'],
        'effectVariableIonIcon': !runtime_1.exists(json, 'effectVariableIonIcon') ? undefined : json['effectVariableIonIcon'],
        'gaugeImage': json['gaugeImage'],
        'gaugeImageSquare': json['gaugeImageSquare'],
        'gaugeSharingImageUrl': !runtime_1.exists(json, 'gaugeSharingImageUrl') ? undefined : json['gaugeSharingImageUrl'],
        'imageUrl': json['imageUrl'],
        'robotSharingImageUrl': !runtime_1.exists(json, 'robotSharingImageUrl') ? undefined : json['robotSharingImageUrl'],
        'avatar': !runtime_1.exists(json, 'avatar') ? undefined : json['avatar'],
    };
}
exports.StudyImagesFromJSONTyped = StudyImagesFromJSONTyped;
function StudyImagesToJSON(value) {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        'causeVariableImageUrl': value.causeVariableImageUrl,
        'causeVariableIonIcon': value.causeVariableIonIcon,
        'effectVariableImageUrl': value.effectVariableImageUrl,
        'effectVariableIonIcon': value.effectVariableIonIcon,
        'gaugeImage': value.gaugeImage,
        'gaugeImageSquare': value.gaugeImageSquare,
        'gaugeSharingImageUrl': value.gaugeSharingImageUrl,
        'imageUrl': value.imageUrl,
        'robotSharingImageUrl': value.robotSharingImageUrl,
        'avatar': value.avatar,
    };
}
exports.StudyImagesToJSON = StudyImagesToJSON;
