/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import {
    AppSettingsResponse,
    AppSettingsResponseFromJSON,
    AppSettingsResponseToJSON,
    JsonErrorResponse,
    JsonErrorResponseFromJSON,
    JsonErrorResponseToJSON,
} from '../models';

export interface GetAppSettingsRequest {
    clientId?: string;
    clientSecret?: string;
    platform?: GetAppSettingsPlatformEnum;
}

/**
 * 
 */
export class AppSettingsApi extends runtime.BaseAPI {

    /**
     * Get the settings for your application configurable at https://build.quantimo.do
     * Get client app settings
     */
    async getAppSettingsRaw(requestParameters: GetAppSettingsRequest): Promise<runtime.ApiResponse<AppSettingsResponse>> {
        const queryParameters: runtime.HTTPQuery = {};

        if (requestParameters.clientId !== undefined) {
            queryParameters['clientId'] = requestParameters.clientId;
        }

        if (requestParameters.clientSecret !== undefined) {
            queryParameters['client_secret'] = requestParameters.clientSecret;
        }

        if (requestParameters.platform !== undefined) {
            queryParameters['platform'] = requestParameters.platform;
        }

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/v3/appSettings`,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        });

        return new runtime.JSONApiResponse(response, (jsonValue) => AppSettingsResponseFromJSON(jsonValue));
    }

    /**
     * Get the settings for your application configurable at https://build.quantimo.do
     * Get client app settings
     */
    async getAppSettings(requestParameters: GetAppSettingsRequest): Promise<AppSettingsResponse> {
        const response = await this.getAppSettingsRaw(requestParameters);
        return await response.value();
    }

}

/**
    * @export
    * @enum {string}
    */
export enum GetAppSettingsPlatformEnum {
    Chrome = 'chrome',
    Android = 'android',
    Ios = 'ios',
    Web = 'web'
}
