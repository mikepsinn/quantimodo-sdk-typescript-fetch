/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface TrackingReminderNotificationPost
 */
export interface TrackingReminderNotificationPost {
    /**
     * track records a measurement for the notification.  snooze changes the notification to 1 hour from now. skip deletes the notification.
     * @type {string}
     * @memberof TrackingReminderNotificationPost
     */
    action: TrackingReminderNotificationPostActionEnum;
    /**
     * Id of the TrackingReminderNotification
     * @type {number}
     * @memberof TrackingReminderNotificationPost
     */
    id: number;
    /**
     * Optional value to be recorded instead of the tracking reminder default value
     * @type {number}
     * @memberof TrackingReminderNotificationPost
     */
    modifiedValue?: number;
}

export function TrackingReminderNotificationPostFromJSON(json: any): TrackingReminderNotificationPost {
    return TrackingReminderNotificationPostFromJSONTyped(json, false);
}

export function TrackingReminderNotificationPostFromJSONTyped(json: any, ignoreDiscriminator: boolean): TrackingReminderNotificationPost {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'action': json['action'],
        'id': json['id'],
        'modifiedValue': !exists(json, 'modifiedValue') ? undefined : json['modifiedValue'],
    };
}

export function TrackingReminderNotificationPostToJSON(value?: TrackingReminderNotificationPost | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'action': value.action,
        'id': value.id,
        'modifiedValue': value.modifiedValue,
    };
}

/**
* @export
* @enum {string}
*/
export enum TrackingReminderNotificationPostActionEnum {
    Skip = 'skip',
    Snooze = 'snooze',
    Track = 'track'
}


