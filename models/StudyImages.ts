/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StudyImages
 */
export interface StudyImages {
    /**
     * Ex: https://static.quantimo.do/img/variable_categories/sleeping_in_bed-96.png
     * @type {string}
     * @memberof StudyImages
     */
    causeVariableImageUrl?: string;
    /**
     * Ex: ion-ios-cloudy-night-outline
     * @type {string}
     * @memberof StudyImages
     */
    causeVariableIonIcon?: string;
    /**
     * Ex: https://static.quantimo.do/img/variable_categories/theatre_mask-96.png
     * @type {string}
     * @memberof StudyImages
     */
    effectVariableImageUrl?: string;
    /**
     * Ex: ion-happy-outline
     * @type {string}
     * @memberof StudyImages
     */
    effectVariableIonIcon?: string;
    /**
     * Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship.png
     * @type {string}
     * @memberof StudyImages
     */
    gaugeImage: string;
    /**
     * Ex: https://s3.amazonaws.com/quantimodo-docs/images/gauge-moderately-positive-relationship-200-200.png
     * @type {string}
     * @memberof StudyImages
     */
    gaugeImageSquare: string;
    /**
     * Image with gauge and category images
     * @type {string}
     * @memberof StudyImages
     */
    gaugeSharingImageUrl?: string;
    /**
     * Ex: https://s3-us-west-1.amazonaws.com/qmimages/variable_categories_gauges_logo_background/gauge-moderately-positive-relationship_sleep_emotions_logo_background.png
     * @type {string}
     * @memberof StudyImages
     */
    imageUrl: string;
    /**
     * Image with robot and category images
     * @type {string}
     * @memberof StudyImages
     */
    robotSharingImageUrl?: string;
    /**
     * Avatar of the principal investigator
     * @type {string}
     * @memberof StudyImages
     */
    avatar?: string;
}

export function StudyImagesFromJSON(json: any): StudyImages {
    return StudyImagesFromJSONTyped(json, false);
}

export function StudyImagesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyImages {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'causeVariableImageUrl': !exists(json, 'causeVariableImageUrl') ? undefined : json['causeVariableImageUrl'],
        'causeVariableIonIcon': !exists(json, 'causeVariableIonIcon') ? undefined : json['causeVariableIonIcon'],
        'effectVariableImageUrl': !exists(json, 'effectVariableImageUrl') ? undefined : json['effectVariableImageUrl'],
        'effectVariableIonIcon': !exists(json, 'effectVariableIonIcon') ? undefined : json['effectVariableIonIcon'],
        'gaugeImage': json['gaugeImage'],
        'gaugeImageSquare': json['gaugeImageSquare'],
        'gaugeSharingImageUrl': !exists(json, 'gaugeSharingImageUrl') ? undefined : json['gaugeSharingImageUrl'],
        'imageUrl': json['imageUrl'],
        'robotSharingImageUrl': !exists(json, 'robotSharingImageUrl') ? undefined : json['robotSharingImageUrl'],
        'avatar': !exists(json, 'avatar') ? undefined : json['avatar'],
    };
}

export function StudyImagesToJSON(value?: StudyImages | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'causeVariableImageUrl': value.causeVariableImageUrl,
        'causeVariableIonIcon': value.causeVariableIonIcon,
        'effectVariableImageUrl': value.effectVariableImageUrl,
        'effectVariableIonIcon': value.effectVariableIonIcon,
        'gaugeImage': value.gaugeImage,
        'gaugeImageSquare': value.gaugeImageSquare,
        'gaugeSharingImageUrl': value.gaugeSharingImageUrl,
        'imageUrl': value.imageUrl,
        'robotSharingImageUrl': value.robotSharingImageUrl,
        'avatar': value.avatar,
    };
}


