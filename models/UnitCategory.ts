/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UnitCategory
 */
export interface UnitCategory {
    /**
     * id
     * @type {number}
     * @memberof UnitCategory
     */
    id?: number;
    /**
     * Category name
     * @type {string}
     * @memberof UnitCategory
     */
    name: string;
    /**
     * Base unit for in which measurements are to be converted to and stored
     * @type {string}
     * @memberof UnitCategory
     */
    standardUnitAbbreviatedName?: string;
}

export function UnitCategoryFromJSON(json: any): UnitCategory {
    return UnitCategoryFromJSONTyped(json, false);
}

export function UnitCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): UnitCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'standardUnitAbbreviatedName': !exists(json, 'standardUnitAbbreviatedName') ? undefined : json['standardUnitAbbreviatedName'],
    };
}

export function UnitCategoryToJSON(value?: UnitCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'standardUnitAbbreviatedName': value.standardUnitAbbreviatedName,
    };
}


