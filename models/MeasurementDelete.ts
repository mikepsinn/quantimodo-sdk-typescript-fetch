/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MeasurementDelete
 */
export interface MeasurementDelete {
    /**
     * Start time of the measurement to be deleted
     * @type {number}
     * @memberof MeasurementDelete
     */
    startTime?: number;
    /**
     * Variable id of the measurement to be deleted
     * @type {number}
     * @memberof MeasurementDelete
     */
    variableId?: number;
    /**
     * Name of the connector for which measurements should be deleted
     * @type {string}
     * @memberof MeasurementDelete
     */
    connectorName?: string;
    /**
     * Your app's client id
     * @type {string}
     * @memberof MeasurementDelete
     */
    clientId: string;
}

export function MeasurementDeleteFromJSON(json: any): MeasurementDelete {
    return MeasurementDeleteFromJSONTyped(json, false);
}

export function MeasurementDeleteFromJSONTyped(json: any, ignoreDiscriminator: boolean): MeasurementDelete {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'startTime': !exists(json, 'startTime') ? undefined : json['startTime'],
        'variableId': !exists(json, 'variableId') ? undefined : json['variableId'],
        'connectorName': !exists(json, 'connectorName') ? undefined : json['connectorName'],
        'clientId': json['clientId'],
    };
}

export function MeasurementDeleteToJSON(value?: MeasurementDelete | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'startTime': value.startTime,
        'variableId': value.variableId,
        'connectorName': value.connectorName,
        'clientId': value.clientId,
    };
}


