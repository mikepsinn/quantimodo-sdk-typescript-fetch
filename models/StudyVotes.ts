/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StudyVotes
 */
export interface StudyVotes {
    /**
     * Average of all user votes with 1 representing an up-vote and 0 representing a down-vote. Ex: 0.9855
     * @type {number}
     * @memberof StudyVotes
     */
    averageVote: number;
    /**
     * 1 if the current user has up-voted the study and 0 if they down-voted it. Null means no vote. Ex: 1 or 0 or null
     * @type {number}
     * @memberof StudyVotes
     */
    userVote: number;
}

export function StudyVotesFromJSON(json: any): StudyVotes {
    return StudyVotesFromJSONTyped(json, false);
}

export function StudyVotesFromJSONTyped(json: any, ignoreDiscriminator: boolean): StudyVotes {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'averageVote': json['averageVote'],
        'userVote': json['userVote'],
    };
}

export function StudyVotesToJSON(value?: StudyVotes | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'averageVote': value.averageVote,
        'userVote': value.userVote,
    };
}


