/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ShareInvitationBody
 */
export interface ShareInvitationBody {
    /**
     * Enter the email address of the friend, family member, or health-care provider that you would like to give access to your measurements
     * @type {string}
     * @memberof ShareInvitationBody
     */
    emailAddress: string;
    /**
     * Name of the individual that the user wishes to have access to their measurements
     * @type {string}
     * @memberof ShareInvitationBody
     */
    name?: string;
    /**
     * Ex: I would like to share my measurements with you!
     * @type {string}
     * @memberof ShareInvitationBody
     */
    emailSubject?: string;
    /**
     * Ex: I would like to share my data with you so you can help me identify find discover hidden causes of and new treatments for my illness.
     * @type {string}
     * @memberof ShareInvitationBody
     */
    emailBody?: string;
    /**
     * Space separated list of scopes to grant to the recipient (i.e. readmeasurements, writemeasurements, measurements:read
     * @type {string}
     * @memberof ShareInvitationBody
     */
    scopes?: string;
}

export function ShareInvitationBodyFromJSON(json: any): ShareInvitationBody {
    return ShareInvitationBodyFromJSONTyped(json, false);
}

export function ShareInvitationBodyFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShareInvitationBody {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'emailAddress': json['emailAddress'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'emailSubject': !exists(json, 'emailSubject') ? undefined : json['emailSubject'],
        'emailBody': !exists(json, 'emailBody') ? undefined : json['emailBody'],
        'scopes': !exists(json, 'scopes') ? undefined : json['scopes'],
    };
}

export function ShareInvitationBodyToJSON(value?: ShareInvitationBody | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'emailAddress': value.emailAddress,
        'name': value.name,
        'emailSubject': value.emailSubject,
        'emailBody': value.emailBody,
        'scopes': value.scopes,
    };
}


