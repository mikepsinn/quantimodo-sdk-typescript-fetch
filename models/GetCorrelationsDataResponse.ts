/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Card,
    CardFromJSON,
    CardFromJSONTyped,
    CardToJSON,
    Correlation,
    CorrelationFromJSON,
    CorrelationFromJSONTyped,
    CorrelationToJSON,
    Explanation,
    ExplanationFromJSON,
    ExplanationFromJSONTyped,
    ExplanationToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetCorrelationsDataResponse
 */
export interface GetCorrelationsDataResponse {
    /**
     * 
     * @type {Array<Correlation>}
     * @memberof GetCorrelationsDataResponse
     */
    correlations: Array<Correlation>;
    /**
     * 
     * @type {Explanation}
     * @memberof GetCorrelationsDataResponse
     */
    explanation: Explanation;
    /**
     * Can be used as body of help info popup
     * @type {string}
     * @memberof GetCorrelationsDataResponse
     */
    description?: string;
    /**
     * Can be used as title in help info popup
     * @type {string}
     * @memberof GetCorrelationsDataResponse
     */
    summary?: string;
    /**
     * Array of error objects with message property
     * @type {Array<Error>}
     * @memberof GetCorrelationsDataResponse
     */
    errors?: Array<Error>;
    /**
     * ex. OK or ERROR
     * @type {string}
     * @memberof GetCorrelationsDataResponse
     */
    status?: string;
    /**
     * true or false
     * @type {boolean}
     * @memberof GetCorrelationsDataResponse
     */
    success?: boolean;
    /**
     * Response code such as 200
     * @type {number}
     * @memberof GetCorrelationsDataResponse
     */
    code?: number;
    /**
     * A super neat url you might want to share with your users!
     * @type {string}
     * @memberof GetCorrelationsDataResponse
     */
    link?: string;
    /**
     * 
     * @type {Card}
     * @memberof GetCorrelationsDataResponse
     */
    card?: Card;
}

export function GetCorrelationsDataResponseFromJSON(json: any): GetCorrelationsDataResponse {
    return GetCorrelationsDataResponseFromJSONTyped(json, false);
}

export function GetCorrelationsDataResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetCorrelationsDataResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'correlations': ((json['correlations'] as Array<any>).map(CorrelationFromJSON)),
        'explanation': ExplanationFromJSON(json['explanation']),
        'description': !exists(json, 'description') ? undefined : json['description'],
        'summary': !exists(json, 'summary') ? undefined : json['summary'],
        'errors': !exists(json, 'errors') ? undefined : json['errors'],
        'status': !exists(json, 'status') ? undefined : json['status'],
        'success': !exists(json, 'success') ? undefined : json['success'],
        'code': !exists(json, 'code') ? undefined : json['code'],
        'link': !exists(json, 'link') ? undefined : json['link'],
        'card': !exists(json, 'card') ? undefined : CardFromJSON(json['card']),
    };
}

export function GetCorrelationsDataResponseToJSON(value?: GetCorrelationsDataResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'correlations': ((value.correlations as Array<any>).map(CorrelationToJSON)),
        'explanation': ExplanationToJSON(value.explanation),
        'description': value.description,
        'summary': value.summary,
        'errors': value.errors,
        'status': value.status,
        'success': value.success,
        'code': value.code,
        'link': value.link,
        'card': CardToJSON(value.card),
    };
}


