/* tslint:disable */
/* eslint-disable */
/**
 * quantimodo
 * We make it easy to retrieve and analyze normalized user data from a wide array of devices and applications. Check out our [docs and sdk\'s](https://github.com/QuantiModo/docs) or [contact us](https://help.quantimo.do).
 *
 * The version of the OpenAPI document: 5.8.112511
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    Image,
    ImageFromJSON,
    ImageFromJSONTyped,
    ImageToJSON,
} from './';

/**
 * 
 * @export
 * @interface GetUploadResponse
 */
export interface GetUploadResponse {
    /**
     * 
     * @type {string}
     * @memberof GetUploadResponse
     */
    data?: string;
    /**
     * Whatever you uploaded
     * @type {string}
     * @memberof GetUploadResponse
     */
    description: string;
    /**
     * Can be used as title in help info popup
     * @type {string}
     * @memberof GetUploadResponse
     */
    summary: string;
    /**
     * 
     * @type {Image}
     * @memberof GetUploadResponse
     */
    image?: Image;
    /**
     * Square icon png url
     * @type {string}
     * @memberof GetUploadResponse
     */
    avatar?: string;
    /**
     * Ex: ion-ios-person
     * @type {string}
     * @memberof GetUploadResponse
     */
    ionIcon?: string;
    /**
     * Ex: Top Predictors of Overall Mood
     * @type {string}
     * @memberof GetUploadResponse
     */
    title?: string;
    /**
     * Embeddable list of study summaries with explanation at the top
     * @type {string}
     * @memberof GetUploadResponse
     */
    html?: string;
}

export function GetUploadResponseFromJSON(json: any): GetUploadResponse {
    return GetUploadResponseFromJSONTyped(json, false);
}

export function GetUploadResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): GetUploadResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'data': !exists(json, 'data') ? undefined : json['data'],
        'description': json['description'],
        'summary': json['summary'],
        'image': !exists(json, 'image') ? undefined : ImageFromJSON(json['image']),
        'avatar': !exists(json, 'avatar') ? undefined : json['avatar'],
        'ionIcon': !exists(json, 'ionIcon') ? undefined : json['ionIcon'],
        'title': !exists(json, 'title') ? undefined : json['title'],
        'html': !exists(json, 'html') ? undefined : json['html'],
    };
}

export function GetUploadResponseToJSON(value?: GetUploadResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'data': value.data,
        'description': value.description,
        'summary': value.summary,
        'image': ImageToJSON(value.image),
        'avatar': value.avatar,
        'ionIcon': value.ionIcon,
        'title': value.title,
        'html': value.html,
    };
}


